type Options = {
  name: string;
  references: Array<string>;
  definitions: Array<string>;
};

const TEMPLATE_NAME_PLACEHOLDER = "{NAME}";
const TEMPLATE_IMPORTS_PLACEHOLDER = "{IMPORTS}";
const TEMPLATE_BODY_PLACEHOLDER = "{BODY}";
const TEMPLATE_OBJECT = (definitions: Array<string>) =>
  `\u0020\u0020${definitions.join(",\n\u0020\u0020")}`;

export const template = `// This file is autogenerated by "oas-to-joi"
${TEMPLATE_IMPORTS_PLACEHOLDER}
export type ${TEMPLATE_NAME_PLACEHOLDER} = {
${TEMPLATE_BODY_PLACEHOLDER}
};
`;
const merge = (options: Options) => {
  const { name, references, definitions } = options;
  // inserting a blank element to force a break line after render imports
  if (references.length == 1) {
    references.push("");
  }
  return template
    .replace(TEMPLATE_NAME_PLACEHOLDER, name)
    .replace(TEMPLATE_IMPORTS_PLACEHOLDER, references.join("\n"))
    .replace(TEMPLATE_BODY_PLACEHOLDER, TEMPLATE_OBJECT(definitions));
};

export default merge;
